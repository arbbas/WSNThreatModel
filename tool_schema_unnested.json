{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "network_properties_schema",
    "title": "Schema Un-nested",
    "type": "object",
    "description": "Network properties of a sensor in a Wireless Sensor Network",
    "properties": {
        "sensor_id": {
            "type": "array",
            "description": "Assigned ID number within the network",
            "min": 1
        },
        "ip_address": {
            "description": "IP Address identifier of Sensor within WSN",
            "type": "string",
            "uniqueItem": "true",
            "pattern": "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
        },
        "mac_address": {
            "description": "MAC Address identifier of Sensor within WSN",
            "type": "string",
            "uniqueItem": "true",
            "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$‚Äù"
        },
        "connection_type": {
            "description": "Communication protocol (WiFi, Bluetooth, NFC)",
            "type": "array",
            "items": {
                "enum": [
                    "WiFi",
                    "Bluetooth",
                    "NFC",
                    "Zigbee",
                    "MiWi"
                ]
            },
            "uniqueItems": true
        },
        "hardware_interface": {
            "description": "Indicates all available interfaces (i.e. USB, FireWire, Ethernet, ATA/IDE, SCSI and PCI)",
            "type": "array",
            "items": {
                "enum": [
                    "USB",
                    "FireWire",
                    "Ethernet",
                    "ATA/IDE",
                    "SCSI",
                    "PCI"
                ]
            },
            "uniqueItems": true
        },
        "network_protocols": {
            "description": "Lists all available network protocols",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "protocol_version": {
            "description": "Lists protocol versions for avaiable protocols.",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "pairing_process": {
            "description": "Indicates how device connects to other devices (clustering algorithm etc.)",
            "type": "array",
            "items": {
                "enum": [
                    "LEACH",
                    "HEED",
                    "ULEACH",
                    "UHEED",
                    "EEUC",
                    "UCLA",
                    "EDUC",
                    "EAUFC",
                    "EEFMC",
                    "HADCC",
                    "H K-mean"
                ]
            },
            "uniqueItems": true
        },
        "connected_sensors": {
            "description": "Indicates which devices in the network the device is connected to",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "encryption": {
            "description": "Types of encryption protocol being used in the network",
            "type": "array",
            "minItems": 1,
            "items": {
                "enum": [
                    "AES",
                    "Blowfish",
                    "DES",
                    "IDEA",
                    "MD5",
                    "RC4",
                    "RC5",
                    "SEED",
                    "SHA-1",
                    "SHA-256",
                    "SEA"
                ]
            },
            "uniqueItems": true
        },
        "authentication": {
            "description": "Are there any authentication methods in place between the nodes?",
            "type": "array",
            "items": {
                "enum": [
                    "Lightweight Dynamic User Authentication Scheme",
                    "SPINS",
                    "LEAP",
                    "Efficient Authenticated Key Establishment Protocols",
                    "Authentication and Key Establishment in Dynamic WSNs",
                    "Broadcast Authentication in WSNs",
                    "Short-Term Public Key System for Broadcast Authentication",
                    "Multiuser Broadcast Authentication",
                    "Lightweight One-Time Signature Scheme",
                    "Mutual Authentication and Key Establishment Protocol",
                    "EIBAS",
                    "Lightweight Authentication Scheme",
                    "LOCHA",
                    "Constrained Function-Based Message Authentication",
                    "Node Level Security Policy Framework",
                    "Public Key Cryptography-Based Broadcast Authentication Scheme",
                    "AuCRB",
                    "Reversible Watermarking Authentication Scheme",
                    "Key Management Scheme"
                ]
            },
            "uniqueItems": true
        },
        "input_sanitisation": {
            "description": "Are inputs santised before being forwarded to backend systems?",
            "type": "array",
            "items": {
                "enum": [
                    "heuristic rule",
                    "temporal correlation",
                    "spatial correlation",
                    "chauvenet's criterion",
                    "modified z-score method"
                ]
            },
            "uniqueItems": true
        },
        "secure_key_storage": {
            "description": "Indicates if key store is available such as Secure Element, Hardware Security Module or Trusted Platform Module",
            "type": "string"
        },
        "data_storage": {
            "description": "Indicates if data is stored on the device",
            "type": "boolean"
        },
        "power_consumption": {
            "description": "Indicates nominal power consumption of the unit (kWh)",
            "type": "string"
        },
        "electromagnetic_emission": {
            "description": "Indicates the nominal EM emissions expected from the unit",
            "type": "string"
        },
        "bandwidth": {
            "description": "Indicates maximum rate of network packets over a given period",
            "type": "string"
        },
        "throughput": {
            "description": "Indicates actual rate of network packets sent over a given period",
            "type": "string"
        },
        "latency": {
            "description": "Delay of packets between being sent from source and arriving at destination",
            "type": "string"
        },
        "error_rate": {
            "description": "Number of corrupted bits as a % of total bits sent",
            "type": "string"
        },
        "operating_system": {
            "description": "What operating system is the sensor on?",
            "type": "string"
        },
        "software_version": {
            "description": "What software version is the sensor on?",
            "type": "string"
        },
        "firmware_version": {
            "description": "What firmware is the sensor on?",
            "type": "string"
        },
        "interfaces": {
            "description": "List of available interfaces that can connect e.g. graphical or command line",
            "type": "array"
        },
        "administration": {
            "description": "How is the device maintained? Remote or Physical",
            "type": "string",
            "enum": [
                "remote",
                "physical"
            ]
        },
        "update_process": {
            "description": "Indicates how and if updates are recieved. Are they checked against a hash?",
            "type": "string"
        },
        "reset_functionality": {
            "description": "Indicates if the device can be reset to initial settings if required",
            "type": "boolean"
        },
        "shared_resources": {
            "description": "Indicates if resources are shared with other users/processes",
            "type": "boolean"
        },
        "anti_tamper_destruction": {
            "description": "Indicates if the node has physical tamper sensing which will make the memory self-destruct when sensed",
            "type": "boolean"
        },
        "accessible_battery_data": {
            "description": "Does the sensor broadcast its battery levels when low?",
            "type": "boolean"
        }
    },
    "additionalProperties": false,
    "required": [
        "sensor_id",
        "ip_address",
        "mac_address",
        "hardware_interface",
        "connection_type",
        "network_protocols",
        "protocol_version",
        "pairing_process",
        "connected_sensors",
        "encryption",
        "authentication",
        "input_sanitisation",
        "electromagnetic_emission",
        "data_storage",
        "power_consumption",
        "secure_key_storage",
        "bandwidth",
        "throughput",
        "latency",
        "error_rate",
        "operating_system",
        "software_version",
        "firmware_version",
        "interfaces",
        "administration",
        "update_process",
        "reset_functionality",
        "shared_resources"
    ]
}